from telethon import events

from bot.tools import get_keyboard, is_expected_steps, get_program_conversation
from bot.db_tools import (
    _update_current_user_step,
    _get_current_user_step
)
from bot.db import get_ai_history, update_ai_messages_db
from telethon.tl.custom import Button
from bot.bot_instance import bot


@bot.on(events.NewMessage(pattern="–ù–∞—á–∞—Ç—å üöÄ"))
async def begin(event):
    user_id = event.message.peer_id.user_id
    step = await _get_current_user_step(user_id)

    if await is_expected_steps(user_id, [0, 3]):
        await _update_current_user_step(user_id, 1)
        text = "–ù–∞—á–Ω–µ–º! –°–ø—Ä–∞—à–∏–≤–∞–π –º–µ–Ω—è –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Ç–µ–±–µ –ø–æ–º–æ—á—å " \
               "—Å –æ—Ç–≤–µ—Ç–∞–º–∏ üôÇ\n\n–ö–æ–≥–¥–∞ —É—Å—Ç–∞–Ω–µ—à—å, –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–∞–≤–µ—Ä—à–∏—Ç—å!\n\n"
        keyboard = await get_keyboard(["–ó–∞–≤–µ—Ä—à–∏—Ç—å"])
        await event.client.send_message(event.sender_id, text, buttons=keyboard)

        history = await get_ai_history(user_id)
        bot_reply = await get_program_conversation(history, "")
        await update_ai_messages_db(user_id, "bot", bot_reply)
        keyboard = await get_keyboard(["–ó–∞–≤–µ—Ä—à–∏—Ç—å"])
        await event.client.send_message(user_id, bot_reply, buttons=keyboard)
